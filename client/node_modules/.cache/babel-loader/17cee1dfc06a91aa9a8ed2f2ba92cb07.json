{"ast":null,"code":"import { API_CALLING, LOGIN_SINH_VIEN, SIGNUP_SINH_VIEN, SIGNUP_ERROR, LOGIN_ERROR } from './types';\nimport axios from 'axios';\nexport var loginSinhVien = function loginSinhVien(email, matKhauSinhVien) {\n  return function (dispatch) {\n    dispatch({\n      type: API_CALLING\n    }, console.log(\"LOGIN_SINH_VIEN\"));\n    axios.post('/api/sinhvien/login', {\n      emailSinhVien: email,\n      matKhauSinhVien: matKhauSinhVien\n    }).then(function (response) {\n      return dispatch({\n        type: LOGIN_SINH_VIEN,\n        payload: response.data\n      });\n    }).catch(function (err) {\n      if (err.response.status == \"401\") {\n        dispatch({\n          type: LOGIN_ERROR,\n          payload: {\n            err: err.response.status,\n            message: \"Email không tồn tại\"\n          }\n        });\n      } else if (err.response.status == \"402\") {\n        dispatch({\n          type: LOGIN_ERROR,\n          payload: {\n            err: err.response.status,\n            message: \"Mật khẩu không chính xác\"\n          }\n        });\n      }\n    });\n  };\n};\nexport var signUpSinhVien = function signUpSinhVien(tenSinhVien, email, matKhau, gioiTinh) {\n  return function (dispatch) {\n    dispatch({\n      type: API_CALLING\n    }, console.log(\"SIGNUP_SINH_VIEN\"));\n    axios.post('/api/sinhvien/signup', {\n      tenSinhVien: tenSinhVien,\n      emailSinhVien: email,\n      matKhauSinhVien: matKhau,\n      gioiTinh: gioiTinh\n    }).then(function (response) {\n      return dispatch({\n        type: SIGNUP_SINH_VIEN,\n        payload: response.data\n      });\n    }).catch(function (err) {\n      if (err.response.status == \"401\") {\n        dispatch({\n          type: SIGNUP_ERROR,\n          payload: {\n            err: err.response.status,\n            message: \"Email đã có người sử dụng\"\n          }\n        });\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/mung_nguyen/20182/Project/Code/DormitoryManagement/client/src/actions/sinhVienAction.js"],"names":["API_CALLING","LOGIN_SINH_VIEN","SIGNUP_SINH_VIEN","SIGNUP_ERROR","LOGIN_ERROR","axios","loginSinhVien","email","matKhauSinhVien","dispatch","type","console","log","post","emailSinhVien","then","response","payload","data","catch","err","status","message","signUpSinhVien","tenSinhVien","matKhau","gioiTinh"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,gBAAvC,EAAyDC,YAAzD,EAAuEC,WAAvE,QAA0F,SAA1F;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,eAAR;AAAA,SAA4B,UAAAC,QAAQ,EAAI;AACjEA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV;AADD,KAAD,EAGJW,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAHI,CAAR;AAKAP,IAAAA,KAAK,CAACQ,IAAN,CAAW,qBAAX,EAAkC;AAC9BC,MAAAA,aAAa,EAAEP,KADe;AAE9BC,MAAAA,eAAe,EAAEA;AAFa,KAAlC,EAGGO,IAHH,CAGQ,UAAAC,QAAQ;AAAA,aAAIP,QAAQ,CAAC;AACzBC,QAAAA,IAAI,EAAET,eADmB;AAEzBgB,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFO,OAAD,CAAZ;AAAA,KAHhB,EAMIC,KANJ,CAMU,UAAAC,GAAG,EAAI;AACb,UAAIA,GAAG,CAACJ,QAAJ,CAAaK,MAAb,IAAuB,KAA3B,EAAmC;AAC/BZ,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEN,WADD;AAELa,UAAAA,OAAO,EAAE;AACLG,YAAAA,GAAG,EAAEA,GAAG,CAACJ,QAAJ,CAAaK,MADb;AAELC,YAAAA,OAAO,EAAE;AAFJ;AAFJ,SAAD,CAAR;AAOH,OARD,MAQO,IAAIF,GAAG,CAACJ,QAAJ,CAAaK,MAAb,IAAuB,KAA3B,EAAmC;AACtCZ,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEN,WADD;AAELa,UAAAA,OAAO,EAAE;AACLG,YAAAA,GAAG,EAAEA,GAAG,CAACJ,QAAJ,CAAaK,MADb;AAELC,YAAAA,OAAO,EAAE;AAFJ;AAFJ,SAAD,CAAR;AAOH;AACJ,KAxBD;AAyBH,GA/B4B;AAAA,CAAtB;AAiCP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,WAAD,EAAcjB,KAAd,EAAqBkB,OAArB,EAA8BC,QAA9B;AAAA,SAA2C,UAAAjB,QAAQ,EAAI;AACjFA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV;AADD,KAAD,EAGJW,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAHI,CAAR;AAKAP,IAAAA,KAAK,CAACQ,IAAN,CAAW,sBAAX,EAAmC;AAC/BW,MAAAA,WAAW,EAAEA,WADkB;AAE/BV,MAAAA,aAAa,EAAEP,KAFgB;AAG/BC,MAAAA,eAAe,EAAEiB,OAHc;AAI/BC,MAAAA,QAAQ,EAAEA;AAJqB,KAAnC,EAKGX,IALH,CAKQ,UAAAC,QAAQ;AAAA,aAAIP,QAAQ,CAAC;AACzBC,QAAAA,IAAI,EAAER,gBADmB;AAEzBe,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFO,OAAD,CAAZ;AAAA,KALhB,EAQIC,KARJ,CAQU,UAAAC,GAAG,EAAI;AACb,UAAIA,GAAG,CAACJ,QAAJ,CAAaK,MAAb,IAAuB,KAA3B,EAAkC;AAC9BZ,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEP,YADD;AAELc,UAAAA,OAAO,EAAE;AACLG,YAAAA,GAAG,EAAEA,GAAG,CAACJ,QAAJ,CAAaK,MADb;AAELC,YAAAA,OAAO,EAAE;AAFJ;AAFJ,SAAD,CAAR;AAOH;AACJ,KAlBD;AAmBH,GAzB6B;AAAA,CAAvB","sourcesContent":["import { API_CALLING, LOGIN_SINH_VIEN, SIGNUP_SINH_VIEN, SIGNUP_ERROR, LOGIN_ERROR } from './types';\nimport axios from 'axios';\n\nexport const loginSinhVien = (email, matKhauSinhVien) => dispatch => {\n    dispatch({\n        type: API_CALLING\n    },\n        console.log(\"LOGIN_SINH_VIEN\")\n    )\n    axios.post('/api/sinhvien/login', {\n        emailSinhVien: email,\n        matKhauSinhVien: matKhauSinhVien\n    }).then(response => dispatch({\n        type: LOGIN_SINH_VIEN,\n        payload: response.data\n    })).catch(err => {\n        if( err.response.status == \"401\" ) {\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: {\n                    err: err.response.status,\n                    message: \"Email không tồn tại\"\n                }\n            })\n        } else if( err.response.status == \"402\" ) {\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: {\n                    err: err.response.status,\n                    message: \"Mật khẩu không chính xác\"\n                }\n            })\n        }\n    })\n}\n\nexport const signUpSinhVien = (tenSinhVien, email, matKhau, gioiTinh) => dispatch => {\n    dispatch({\n        type: API_CALLING\n    },\n        console.log(\"SIGNUP_SINH_VIEN\")\n    )\n    axios.post('/api/sinhvien/signup', {\n        tenSinhVien: tenSinhVien,\n        emailSinhVien: email,\n        matKhauSinhVien: matKhau,\n        gioiTinh: gioiTinh\n    }).then(response => dispatch({\n        type: SIGNUP_SINH_VIEN,\n        payload: response.data\n    })).catch(err => {\n        if (err.response.status == \"401\") {\n            dispatch({\n                type: SIGNUP_ERROR,\n                payload: {\n                    err: err.response.status,\n                    message: \"Email đã có người sử dụng\"\n                }\n            })\n        }\n    })\n}"]},"metadata":{},"sourceType":"module"}