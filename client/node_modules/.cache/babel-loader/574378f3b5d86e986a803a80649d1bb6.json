{"ast":null,"code":"var crypto = require('crypto'),\n    qs = require('querystring');\n\nfunction sha1(key, body) {\n  return crypto.createHmac('sha1', key).update(body).digest('base64');\n}\n\nfunction rfc3986(str) {\n  return encodeURIComponent(str).replace(/!/g, '%21').replace(/\\*/g, '%2A').replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/'/g, '%27');\n}\n\nfunction hmacsign(httpMethod, base_uri, params, consumer_secret, token_secret) {\n  // adapted from https://dev.twitter.com/docs/auth/oauth and \n  // https://dev.twitter.com/docs/auth/creating-signature\n  var querystring = Object.keys(params).sort().map(function (key) {\n    // big WTF here with the escape + encoding but it's what twitter wants\n    return escape(rfc3986(key)) + \"%3D\" + escape(rfc3986(params[key]));\n  }).join('%26');\n  var base = [httpMethod ? httpMethod.toUpperCase() : 'GET', rfc3986(base_uri), querystring].join('&');\n  var key = [consumer_secret, token_secret || ''].map(rfc3986).join('&');\n  return sha1(key, base);\n}\n\nexports.hmacsign = hmacsign;\nexports.rfc3986 = rfc3986;","map":null,"metadata":{},"sourceType":"script"}