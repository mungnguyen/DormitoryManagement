{"ast":null,"code":"var request = require('request'),\n    template = new (require('url-template'))();\n\nvar apiUrl = 'https://typekit.com/api/v1/json/kits',\n    kitUrl = template.parse(apiUrl + '/{id}'),\n    publishUrl = template.parse(apiUrl + '/{id}/publish');\n\nfunction parseResponse(callback) {\n  return function (err, res, body) {\n    if (err) {\n      callback(err, null);\n    } else if (res.statusCode !== 200 && res.statusCode !== 201) {\n      callback({\n        statusCode: res.statusCode,\n        body: JSON.parse(body.toString())\n      });\n    } else {\n      callback(null, JSON.parse(body.toString()));\n    }\n  };\n}\n\nfunction createHeaders(token) {\n  return {\n    'X-Typekit-Token': token\n  };\n}\n\nfunction create(token, data, callback) {\n  request.post({\n    url: apiUrl,\n    headers: createHeaders(token),\n    form: data\n  }, parseResponse(callback));\n}\n\nfunction update(token, id, data, callback) {\n  request.post({\n    url: kitUrl.expand({\n      id: id\n    }),\n    headers: createHeaders(token),\n    form: data\n  }, parseResponse(callback));\n}\n\nfunction get(token, id, callback) {\n  request.get({\n    url: kitUrl.expand({\n      id: id\n    }),\n    headers: createHeaders(token)\n  }, parseResponse(callback));\n}\n\nfunction list(token, callback) {\n  request.get({\n    url: apiUrl,\n    headers: createHeaders(token)\n  }, parseResponse(callback));\n}\n\nfunction remove(token, id, callback) {\n  request.del({\n    url: kitUrl.expand({\n      id: id\n    }),\n    headers: createHeaders(token)\n  }, parseResponse(callback));\n}\n\nfunction publish(token, id, callback) {\n  request.post({\n    url: publishUrl.expand({\n      id: id\n    }),\n    headers: createHeaders(token)\n  }, parseResponse(callback));\n}\n\nmodule.exports = {\n  create: create,\n  update: update,\n  remove: remove,\n  get: get,\n  list: list,\n  publish: publish\n};","map":null,"metadata":{},"sourceType":"script"}